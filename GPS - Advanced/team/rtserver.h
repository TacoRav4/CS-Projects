/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_RTSERVER_H_
#define JSONRPC_CPP_STUB_RTSERVER_H_

#include <jsonrpccpp/server.h>

class rtServer : public jsonrpc::AbstractServer<rtServer>
{
    public:
        rtServer(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<rtServer>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("register team", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT, "action",jsonrpc::JSON_STRING,"your_json",jsonrpc::JSON_OBJECT, NULL), &rtServer::register_teamI);
        }

        inline virtual void register_teamI(const Json::Value &request, Json::Value &response)
        {
            response = this->register_team(request["action"].asString(), request["your_json"]);
        }
        virtual Json::Value register_team(const std::string& action, const Json::Value& your_json) = 0;
};

#endif //JSONRPC_CPP_STUB_RTSERVER_H_
